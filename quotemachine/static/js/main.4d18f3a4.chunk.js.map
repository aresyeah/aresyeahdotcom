{"version":3,"sources":["Components/Quote/Quote.module.css","Components/NewQuote/NewQuote.module.css","Components/TweetQuote/TweetQuote.module.css","Components/QuoteBox/QuoteBox.module.css","Components/Quote/Quote.jsx","Components/NewQuote/NewQuote.jsx","Components/TweetQuote/TweetQuote.jsx","store/actions/actionTypes.js","store/actions/getQuote.js","Components/QuoteBox/QuoteBox.jsx","App.js","store/reducers/reducer.js","index.js"],"names":["module","exports","Quote","props","className","styles","id","text","href","author","NewQuote","onClick","newQuoteOnClicker","TweetQuote","hrefFinal","encodeURI","axios","require","newQuoteAction","textAndAuthor","type","body","email","fetchQuoteFailed","QuoteBox","onNewQuote","this","Component","connect","state","dispatch","random500","Math","floor","random","get","then","response","data","catch","error","App","initialState","reducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,SAAW,6B,8LCGd,SAASC,EAAMC,GAC1B,OACI,yBAAKC,UAAWC,IAAOH,OACnB,wBAAII,GAAG,QAAQH,EAAMI,MACrB,uBAAGD,GAAG,SAASE,KAAK,IAAIL,EAAMM,S,qBCJ3B,SAASC,EAASP,GAC7B,OACI,yBAAKC,UAAWC,IAAOK,UACnB,4BAAQC,QAASR,EAAMS,kBAAmBN,GAAG,aAA7C,c,qBCHG,SAASO,EAAWV,GACjC,IAAMI,EAAOJ,EAAMI,KACbE,EAASN,EAAMM,OAIfK,EAAYC,UAFF,0DADMR,EAAO,KAAOE,IAKpC,OACE,yBAAKL,UAAWC,IAAOQ,YACrB,uBAAGP,GAAG,cAAcE,KAAMM,GAA1B,gBCdC,ICCDE,EAAQC,EAAQ,IAgBTC,EAAiB,SAAAC,GAC5B,MAAO,CACLC,KDnBqB,YCoBrBb,KAAMY,EAAcE,KACpBZ,OAAQU,EAAcG,QAIbC,EAAmB,WAC9B,MAAO,CACLH,KD1B8B,uB,iBEWrBI,EAAb,2MAKEZ,kBAAoB,WAClB,EAAKT,MAAMsB,cANf,mFAEIC,KAAKvB,MAAMsB,eAFf,+BAUI,OACE,yBAAKnB,GAAG,YAAYF,UAAWC,IAAOmB,UACpC,kBAACtB,EAAD,CACEK,KAAM,IAAMmB,KAAKvB,MAAMI,KAAO,IAC9BE,OAAQ,KAAOiB,KAAKvB,MAAMM,SAE5B,kBAACI,EAAD,CACEN,KAAM,IAAMmB,KAAKvB,MAAMI,KAAO,IAC9BE,OAAQ,KAAOiB,KAAKvB,MAAMM,SAE5B,kBAACC,EAAD,CAAUE,kBAAmBc,KAAKd,yBApB1C,GAA8Be,aAuCfC,cAbS,SAAAC,GACtB,MAAO,CACLtB,KAAMsB,EAAMtB,KACZE,OAAQoB,EAAMpB,SAIS,SAAAqB,GACzB,MAAO,CACLL,WAAY,kBAAMK,ED3Cb,SAAAA,GACL,IAAMC,EAAYC,KAAKC,MAAsB,IAAhBD,KAAKE,UAClClB,EACGmB,IAAI,iDACJC,KAAK,SAAAC,GACJP,EAASZ,EAAemB,EAASC,KAAKP,OAEvCQ,MAAM,SAAAC,GACLV,EAASP,YCuCFK,CAGbJ,GCvCaiB,MATf,WACE,OAEE,6BACE,kBAAC,EAAD,Q,2jBCRN,IAAMC,EAAe,CACnBnC,KAAM,mBACNE,OAAQ,sBAsBKkC,EAnBC,WAAmC,IAAlCd,EAAiC,uDAAzBa,EAAcE,EAAW,uCAChD,OAAQA,EAAOxB,MACb,IJTqB,YIUnB,OAAO,EAAP,GACKS,EADL,CAEEtB,KAAMqC,EAAOrC,KACbE,OAAQmC,EAAOnC,SAEnB,IJd8B,qBIe5B,OAAO,EAAP,GACKoB,EADL,CAEEtB,KAAM,qBACNE,OAAQ,uBAEZ,QACE,OAAOoB,ICXPgB,EAAmBC,OAAOC,sCAAwCC,IAElEC,EAAQC,YAAYP,EAASE,EAAiBM,YAAgBC,OAEpEC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.4d18f3a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quote\":\"Quote_Quote__1t89J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewQuote\":\"NewQuote_NewQuote__iAbt9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TweetQuote\":\"TweetQuote_TweetQuote__aKV9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuoteBox\":\"QuoteBox_QuoteBox__32QO9\"};","import React from 'react'\r\n\r\nimport styles from './Quote.module.css';\r\n\r\nexport default function Quote(props) {\r\n    return (\r\n        <div className={styles.Quote}>\r\n            <h3 id=\"text\">{props.text}</h3>\r\n            <p id=\"author\" href=''>{props.author}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport styles from './NewQuote.module.css';\r\n\r\nexport default function NewQuote(props) {\r\n    return (\r\n        <div className={styles.NewQuote}>\r\n            <button onClick={props.newQuoteOnClicker} id=\"new-quote\">New Quote</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nimport styles from \"./TweetQuote.module.css\";\r\n\r\nexport default function TweetQuote(props) {\r\n  const text = props.text;\r\n  const author = props.author;\r\n  const textAndauthor = text + \"  \" + author;\r\n  const hrefPre = \"https://twitter.com/intent/tweet?hashtags=quotes&text=\";\r\n  const hrefFinalRaw = hrefPre + textAndauthor;\r\n  const hrefFinal = encodeURI(hrefFinalRaw);\r\n\r\n  return (\r\n    <div className={styles.TweetQuote}>\r\n      <a id=\"tweet-quote\" href={hrefFinal}>\r\n        Tweet Quote\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n","export const NEW_QUOTE = \"NEW_QUOTE\";\r\nexport const FETCH_QUOTE_FAILED = \"FETCH_QUOTE_FAILED\";\r\n","import * as actionTypes from \"./actionTypes\";\r\nconst axios = require(\"axios\");\r\n\r\nexport const newQuote = () => {\r\n  return dispatch => {\r\n    const random500 = Math.floor(Math.random() * 501);\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/comments\")\r\n      .then(response => {\r\n        dispatch(newQuoteAction(response.data[random500]));\r\n      })\r\n      .catch(error => {\r\n        dispatch(fetchQuoteFailed());\r\n      });\r\n  };\r\n};\r\n\r\nexport const newQuoteAction = textAndAuthor => {\r\n  return {\r\n    type: actionTypes.NEW_QUOTE,\r\n    text: textAndAuthor.body,\r\n    author: textAndAuthor.email\r\n  };\r\n};\r\n\r\nexport const fetchQuoteFailed = () => {\r\n  return {\r\n    type: actionTypes.FETCH_QUOTE_FAILED\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Quote from \"../Quote/Quote\";\r\nimport NewQuote from \"../NewQuote/NewQuote\";\r\nimport TweetQuote from \"../TweetQuote/TweetQuote\";\r\n\r\nimport * as actionCreators from \"../../store/actions/index\";\r\n\r\nimport styles from \"./QuoteBox.module.css\";\r\n\r\nexport class QuoteBox extends Component {\r\n  componentDidMount() {\r\n    this.props.onNewQuote();\r\n  }\r\n\r\n  newQuoteOnClicker = () => {\r\n    this.props.onNewQuote();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"quote-box\" className={styles.QuoteBox}>\r\n        <Quote\r\n          text={'\"' + this.props.text + '\"'}\r\n          author={\"- \" + this.props.author}\r\n        />\r\n        <TweetQuote\r\n          text={'\"' + this.props.text + '\"'}\r\n          author={\"- \" + this.props.author}\r\n        />\r\n        <NewQuote newQuoteOnClicker={this.newQuoteOnClicker} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    text: state.text,\r\n    author: state.author\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onNewQuote: () => dispatch(actionCreators.newQuote())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(QuoteBox);\r\n","import React from \"react\";\n\nimport QuoteBox from \"./Components/QuoteBox/QuoteBox\";\n\n// import styles from './App.module.css';\n\nfunction App() {\n  return (\n    // <div className={styles.App}>\n    <div>\n      <QuoteBox />\n    </div>\n  );\n}\n\nexport default App;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  text: \"initialStatetext\",\n  author: \"initialStateauthor\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.NEW_QUOTE:\n      return {\n        ...state,\n        text: action.text,\n        author: action.author\n      };\n    case actionTypes.FETCH_QUOTE_FAILED:\n      return {\n        ...state,\n        text: \"FETCH_QUOTE_FAILED\",\n        author: \"FETCH_QUOTE_FAILED\"\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n// eslint-disable-next-line\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport reducer from \"./store/reducers/reducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
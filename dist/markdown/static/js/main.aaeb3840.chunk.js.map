{"version":3,"sources":["Components/Editor/Editor.jsx","Components/Previewer/Previewer.jsx","App.js","index.js"],"names":["Editor","props","id","onChange","textAreaChanged","rows","cols","defaultValue","value","Previewer","dangerouslySetInnerHTML","__html","markedtext","marked","require","renderer","Renderer","link","href","placeholdertext","App","state","textAreaInput","textAreaChangeHandler","bind","e","this","setState","target","style","marginButtom","Component","ReactDOM","render","document","getElementById"],"mappings":"gMAEe,SAASA,EAAOC,GAC3B,OACI,6BACI,8BAAUC,GAAG,SAASC,SAAUF,EAAMG,gBAAiBC,KAAK,KAAKC,KAAK,KAAKC,aAAcN,EAAMO,SCH5F,SAASC,EAAUR,GAE9B,OACI,6BACI,yBAAKC,GAAG,UACRQ,wBAAyB,CAACC,OAAQV,EAAMW,eCGpD,IAAMC,EAASC,EAAQ,IAGjBC,EAAW,IAAIF,EAAOG,SAG5BD,EAASE,KAAO,SAAUC,GACxB,MAAM,YAAN,OAAmBA,EAAnB,gCAGF,IAcMC,EAAe,gJAda,gBAcb,y3BAZS,yIAYT,MAuENC,EA5Bf,YACE,WAAYnB,GAAQ,IAAD,8BACjB,4CAAMA,KACDoB,MAAO,CACVC,cAAeH,GAGjB,EAAKI,sBAAwB,EAAKA,sBAAsBC,KAA3B,gBANZ,EADrB,mFAUyBC,GACrBC,KAAKC,SAAS,CACZL,cAAeG,EAAEG,OAAOpB,UAZ9B,+BAmBI,OACE,6BACE,kBAACR,EAAD,CAAQI,gBAAiBsB,KAAKH,sBAAuBM,MAAO,CAACC,aAAc,QAAStB,MAAOkB,KAAKL,MAAMC,gBACtG,kBAACb,EAAD,CAAWG,WAAYC,EAAOa,KAAKL,MAAMC,cAAe,CAAEP,SAAUA,WAtB5E,GAAyBgB,aCvEzBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.aaeb3840.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Editor(props) {\r\n    return (\r\n        <div>\r\n            <textarea id=\"editor\" onChange={props.textAreaChanged} rows=\"20\" cols=\"70\" defaultValue={props.value}></textarea>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Previewer(props) {\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"preview\" \r\n            dangerouslySetInnerHTML={{__html: props.markedtext}} />\r\n        </div>   \r\n    )\r\n\r\n\r\n    // return (\r\n    //     <div>{props.markedtext}</div>             \r\n    // )\r\n}\r\n","// https://learn.freecodecamp.org/front-end-libraries/front-end-libraries-projects/build-a-markdown-previewer/\n\nimport React, { Component } from 'react'\n\n// import styles from './App.module.css';\n\nimport Editor from './Components/Editor/Editor'\nimport Previewer from './Components/Previewer/Previewer'\n\n// Create reference instance\nconst marked = require('marked');\n\n// Get reference\nconst renderer = new marked.Renderer();\n\n// Override function\nrenderer.link = function (href) {\n  return `<a href=\"${href}\" target=\"_blank\">links</a>`;\n};\n\nconst placeholdertextinlinecode = \"`<div></div>`\"\n\nconst placeholdertextcodeblock = `\\`\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if () {\n    return multiLineCode;\n  }\n}\n\\`\\`\\``\n\n\n\nconst placeholdertext = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n  \nHeres some code, ${placeholdertextinlinecode}, between 2 backticks.\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\n\n\n\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | ------------- \nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want! \n1. But the list goes on...\n- Even if you use dashes or asterisks.\n* And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n${placeholdertextcodeblock}\n`\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state= {\n      textAreaInput: placeholdertext\n    }\n\n    this.textAreaChangeHandler = this.textAreaChangeHandler.bind(this)\n  }\n\n  textAreaChangeHandler (e) {\n    this.setState({\n      textAreaInput: e.target.value\n    })\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <Editor textAreaChanged={this.textAreaChangeHandler} style={{marginButtom: '20px'}} value={this.state.textAreaInput}/>\n        <Previewer markedtext={marked(this.state.textAreaInput, { renderer: renderer })}/>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
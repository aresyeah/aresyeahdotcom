{"version":3,"sources":["Components/Display/Display.module.css","Components/DrumPad/DrumPad.module.css","Components/DrumPadSection/DrumPadSection.module.css","Components/DrumMachine/DrumMachine.module.css","Components/Display/Display.jsx","Components/DrumPad/DrumPad.jsx","Components/DrumPadSection/DrumPadSection.jsx","Components/DrumMachine/DrumMachine.jsx","store/actions/playAudio.js","store/actions/actionTypes.js","App.js","store/reducers/reducer.js","index.js"],"names":["module","exports","Display","props","className","styles","id","DrumPadName","DrumPad","onClick","drumPadOnClickHandler","DrumPadID","src","DrumPadSRC","autoPlay","DrumPadSection","drumpadsArray","drumpads","map","drumpad","key","DrumMachine","document","addEventListener","this","onKeyDownHandler","activeDrumPadName","activeDrumPadID","onKeyDown","Component","connect","state","dispatch","console","log","type","actionCreators","event","toUpperCase","App","initialState","validDrumPads","reducer","action","indexOf","getElementById","play","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,QAAU,2B,mBCA5BD,EAAOC,QAAU,CAAC,eAAiB,yC,mBCAnCD,EAAOC,QAAU,CAAC,YAAc,mC,2MCGjB,SAASC,EAAQC,GAE5B,OACI,yBAAKC,UAAWC,IAAOH,SACnB,wBAAII,GAAG,WAAiC,KAAtBH,EAAMI,YAAqB,UAAYJ,EAAMI,c,qBCJ5D,SAASC,EAAQL,GAC9B,OACE,yBACEC,UAAU,WACVE,GAAIH,EAAMI,YACVE,QAAS,WAEPN,EAAMO,sBAAsBP,EAAMQ,aAGpC,yBAAKP,UAAWC,IAAOG,SACrB,2BACEJ,UAAU,OACVE,GAAIH,EAAMQ,UACVC,IAAKT,EAAMU,WACXC,UAAU,IAEZ,gCAASX,EAAMQ,a,qBCfR,SAASI,EAAeZ,GACrC,IAAMa,EAAgBb,EAAMc,SAASC,IAAI,SAAAC,GACvC,OACE,kBAACX,EAAD,CACEY,IAAKD,EAAQR,UACbA,UAAWQ,EAAQR,UACnBE,WAAYM,EAAQN,WACpBN,YAAaY,EAAQZ,YACrBG,sBAAuBP,EAAMO,0BAKnC,OAAO,yBAAKN,UAAWC,IAAOU,gBAAiBC,G,qBCRpCK,EAAb,4LAEIC,SAASC,iBAAiB,UAAWC,KAAKrB,MAAMsB,oBAFpD,+BAMI,IAAIC,EAAoB,GADjB,uBAEP,YAAoBF,KAAKrB,MAAMc,SAA/B,+CAAyC,CAAC,IAAjCE,EAAgC,QACnCK,KAAKrB,MAAMwB,kBAAoBR,EAAQR,YACzCe,EAAoBP,EAAQZ,cAJzB,kFAQP,OACE,yBACED,GAAG,eACHF,UAAWC,IAAOgB,YAClBO,UAAWJ,KAAKrB,MAAMsB,kBAGtB,kBAACV,EAAD,CACEE,SAAUO,KAAKrB,MAAMc,SACrBP,sBAAuBc,KAAKrB,MAAMO,wBAEpC,kBAACR,EAAD,CAASK,YAAamB,SAxB9B,GAAiCG,aA+ClBC,cAjBS,SAAAC,GACtB,MAAO,CACLd,SAAUc,EAAMd,SAChBU,gBAAiBI,EAAMJ,kBAIA,SAAAK,GACzB,MAAO,CACLtB,sBAAuB,SAAAC,GACrBsB,QAAQC,IAAIvB,GACZqB,EClD4B,SAAArB,GAChC,MAAO,CACLwB,KCJ4B,mBDK5BR,gBAAiBhB,GD+CNyB,CAAkCzB,KAE7Cc,iBAAkB,SAAAY,GAAK,OAAIL,EC7CA,SAAAK,GAG7B,MAAO,CACLF,KCZoB,WDapBR,gBAJcU,EAAMjB,IAAIkB,eD4CYF,CAA+BC,OAIxDP,CAGbT,GG7CakB,MATf,WACE,OAEE,6BACE,kBAAC,EAAD,Q,2jBCTN,IAAMC,EAAe,CACnBvB,SAAU,CACR,CACEN,UAAW,IACXE,WAAY,2DACZN,YAAa,YAEf,CACEI,UAAW,IACXE,WAAY,2DACZN,YAAa,YAEf,CACEI,UAAW,IACXE,WAAY,2DACZN,YAAa,YAEf,CACEI,UAAW,IACXE,WAAY,6DACZN,YAAa,YAEf,CACEI,UAAW,IACXE,WAAY,2DACZN,YAAa,QAEf,CACEI,UAAW,IACXE,WAAY,yDACZN,YAAa,WAEf,CACEI,UAAW,IACXE,WAAY,6DACZN,YAAa,eAEf,CACEI,UAAW,IACXE,WAAY,6DACZN,YAAa,YAEf,CACEI,UAAW,IACXE,WAAY,yDACZN,YAAa,cAGjBoB,gBAAiB,GACjBc,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MA4B3CC,EAzBC,WAAmC,IAAlCX,EAAiC,uDAAzBS,EAAcG,EAAW,uCAChD,OAAQA,EAAOR,MACb,IFxD4B,mBEiE5B,IFhEoB,WEqElB,OAH6D,IAAzDJ,EAAMU,cAAcG,QAAQD,EAAOhB,kBACrCL,SAASuB,eAAeF,EAAOhB,iBAAiBmB,OAE3C,EAAP,GACKf,EADL,CAEEJ,gBAAiBgB,EAAOhB,kBAE5B,QACE,OAAOI,IC/DPgB,G,MAAQC,YACZN,EACAO,OAAOC,8BAAgCD,OAAOC,iCAGhDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFzB,SAASuB,eAAe,W","file":"static/js/main.6a8cd2e9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Display\":\"Display_Display__pBnNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrumPad\":\"DrumPad_DrumPad__1tYoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrumPadSection\":\"DrumPadSection_DrumPadSection__sU8cR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrumMachine\":\"DrumMachine_DrumMachine__JFDRf\"};","import React from 'react'\r\n\r\nimport styles from './Display.module.css';\r\n\r\nexport default function Display(props) {\r\n    // console.log(typeof props.DrumPadName)\r\n    return (\r\n        <div className={styles.Display}>\r\n            <h2 id=\"display\">{props.DrumPadName === '' ? 'Display' : props.DrumPadName}</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\n\r\nimport styles from \"./DrumPad.module.css\";\r\n\r\nexport default function DrumPad(props) {\r\n  return (\r\n    <div\r\n      className=\"drum-pad\"\r\n      id={props.DrumPadName}\r\n      onClick={() => {\r\n        // console.log(props.DrumPadID);\r\n        props.drumPadOnClickHandler(props.DrumPadID);\r\n      }}\r\n    >\r\n      <div className={styles.DrumPad}>\r\n        <audio\r\n          className=\"clip\"\r\n          id={props.DrumPadID}\r\n          src={props.DrumPadSRC}\r\n          autoPlay={false}\r\n        ></audio>\r\n        <button>{props.DrumPadID}</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport DrumPad from \"../DrumPad/DrumPad\";\r\n\r\nimport styles from \"./DrumPadSection.module.css\";\r\n\r\nexport default function DrumPadSection(props) {\r\n  const drumpadsArray = props.drumpads.map(drumpad => {\r\n    return (\r\n      <DrumPad\r\n        key={drumpad.DrumPadID}\r\n        DrumPadID={drumpad.DrumPadID}\r\n        DrumPadSRC={drumpad.DrumPadSRC}\r\n        DrumPadName={drumpad.DrumPadName}\r\n        drumPadOnClickHandler={props.drumPadOnClickHandler}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className={styles.DrumPadSection}>{drumpadsArray}</div>;\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport * as actionCreators from \"../../store/actions/index\";\r\n\r\nimport Display from \"../Display/Display\";\r\nimport DrumPadSection from \"../DrumPadSection/DrumPadSection\";\r\n\r\nimport styles from \"./DrumMachine.module.css\";\r\n\r\nexport class DrumMachine extends Component {\r\n  componentDidMount() {\r\n    document.addEventListener(\"keydown\", this.props.onKeyDownHandler);\r\n  }\r\n\r\n  render() {\r\n    let activeDrumPadName = \"\";\r\n    for (let drumpad of this.props.drumpads) {\r\n      if (this.props.activeDrumPadID === drumpad.DrumPadID) {\r\n        activeDrumPadName = drumpad.DrumPadName;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div\r\n        id=\"drum-machine\"\r\n        className={styles.DrumMachine}\r\n        onKeyDown={this.props.onKeyDownHandler}\r\n      >\r\n        {/* {drumpadsArray} */}\r\n        <DrumPadSection\r\n          drumpads={this.props.drumpads}\r\n          drumPadOnClickHandler={this.props.drumPadOnClickHandler}\r\n        />\r\n        <Display DrumPadName={activeDrumPadName} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    drumpads: state.drumpads,\r\n    activeDrumPadID: state.activeDrumPadID\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    drumPadOnClickHandler: DrumPadID => {\r\n      console.log(DrumPadID);\r\n      dispatch(actionCreators.drumPadClickAction(DrumPadID));\r\n    },\r\n    onKeyDownHandler: event => dispatch(actionCreators.onKeyDownAction(event))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(DrumMachine);\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nexport const drumPadClickAction = DrumPadID => {\r\n  return {\r\n    type: actionTypes.DRUM_PAD_CLICKED,\r\n    activeDrumPadID: DrumPadID\r\n  };\r\n};\r\n\r\nexport const onKeyDownAction = event => {\r\n  const keyDown = event.key.toUpperCase();\r\n\r\n  return {\r\n    type: actionTypes.KEY_DOWN,\r\n    activeDrumPadID: keyDown\r\n  };\r\n};\r\n","export const DRUM_PAD_CLICKED = \"DRUM_PAD_CLICKED\";\r\nexport const KEY_DOWN = \"KEY_DOWN\";\r\n","// https://learn.freecodecamp.org/front-end-libraries/front-end-libraries-projects/build-a-drum-machine\n\nimport React from 'react';\n\nimport DrumMachine from './Components/DrumMachine/DrumMachine'\n\n\nfunction App() {\n  return (\n    // <div className={styles.App}>\n    <div>\n      <DrumMachine />\n    </div>\n  );\n}\n\nexport default App;\n","import * as actionTypes from \"../actions/actionTypes\";\n\nconst initialState = {\n  drumpads: [\n    {\n      DrumPadID: \"Q\",\n      DrumPadSRC: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\",\n      DrumPadName: \"Heater-1\"\n    },\n    {\n      DrumPadID: \"W\",\n      DrumPadSRC: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3\",\n      DrumPadName: \"Heater-2\"\n    },\n    {\n      DrumPadID: \"E\",\n      DrumPadSRC: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3\",\n      DrumPadName: \"Heater-3\"\n    },\n    {\n      DrumPadID: \"A\",\n      DrumPadSRC: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3\",\n      DrumPadName: \"Heater-4\"\n    },\n    {\n      DrumPadID: \"S\",\n      DrumPadSRC: \"https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3\",\n      DrumPadName: \"Clap\"\n    },\n    {\n      DrumPadID: \"D\",\n      DrumPadSRC: \"https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3\",\n      DrumPadName: \"Open-HH\"\n    },\n    {\n      DrumPadID: \"Z\",\n      DrumPadSRC: \"https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3\",\n      DrumPadName: \"Kick-n'-Hat\"\n    },\n    {\n      DrumPadID: \"X\",\n      DrumPadSRC: \"https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3\",\n      DrumPadName: \"Heater-8\"\n    },\n    {\n      DrumPadID: \"C\",\n      DrumPadSRC: \"https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3\",\n      DrumPadName: \"Closed-HH\"\n    }\n  ],\n  activeDrumPadID: \"\",\n  validDrumPads: [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"]\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.DRUM_PAD_CLICKED:\n      // console.log(action.activeDrumPadID);\n      if (state.validDrumPads.indexOf(action.activeDrumPadID) !== -1) {\n        document.getElementById(action.activeDrumPadID).play();\n      }\n      return {\n        ...state,\n        activeDrumPadID: action.activeDrumPadID\n      };\n    case actionTypes.KEY_DOWN:\n      // console.log(action.activeDrumPadID);\n      if (state.validDrumPads.indexOf(action.activeDrumPadID) !== -1) {\n        document.getElementById(action.activeDrumPadID).play();\n      }\n      return {\n        ...state,\n        activeDrumPadID: action.activeDrumPadID\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { Provider } from \"react-redux\";\n\nimport { createStore } from \"redux\";\n\nimport App from \"./App\";\nimport reducer from \"./store/reducers/reducer\";\n\nimport \"./index.css\";\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}